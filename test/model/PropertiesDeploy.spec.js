/**
 * BIG-IQ Deploy Configuration
 * API used to deploy configuration changes made on BIG-IQ or BIG-IP devices.
 *
 * OpenAPI spec version: 5.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BigIqDeployConfiguration);
  }
}(this, function(expect, BigIqDeployConfiguration) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BigIqDeployConfiguration.PropertiesDeploy();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PropertiesDeploy', function() {
    it('should create an instance of PropertiesDeploy', function() {
      // uncomment below and update the code to test PropertiesDeploy
      //var instane = new BigIqDeployConfiguration.PropertiesDeploy();
      //expect(instance).to.be.a(BigIqDeployConfiguration.PropertiesDeploy);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instane = new BigIqDeployConfiguration.PropertiesDeploy();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instane = new BigIqDeployConfiguration.PropertiesDeploy();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instane = new BigIqDeployConfiguration.PropertiesDeploy();
      //expect(instance).to.be();
    });

    it('should have the property startDateTime (base name: "startDateTime")', function() {
      // uncomment below and update the code to test the property startDateTime
      //var instane = new BigIqDeployConfiguration.PropertiesDeploy();
      //expect(instance).to.be();
    });

    it('should have the property endDateTime (base name: "endDateTime")', function() {
      // uncomment below and update the code to test the property endDateTime
      //var instane = new BigIqDeployConfiguration.PropertiesDeploy();
      //expect(instance).to.be();
    });

    it('should have the property partition (base name: "partition")', function() {
      // uncomment below and update the code to test the property partition
      //var instane = new BigIqDeployConfiguration.PropertiesDeploy();
      //expect(instance).to.be();
    });

    it('should have the property firewallType (base name: "firewallType")', function() {
      // uncomment below and update the code to test the property firewallType
      //var instane = new BigIqDeployConfiguration.PropertiesDeploy();
      //expect(instance).to.be();
    });

    it('should have the property firewallIpAddress (base name: "firewallIpAddress")', function() {
      // uncomment below and update the code to test the property firewallIpAddress
      //var instane = new BigIqDeployConfiguration.PropertiesDeploy();
      //expect(instance).to.be();
    });

    it('should have the property identityReferences (base name: "identityReferences")', function() {
      // uncomment below and update the code to test the property identityReferences
      //var instane = new BigIqDeployConfiguration.PropertiesDeploy();
      //expect(instance).to.be();
    });

    it('should have the property childSnapshotReference (base name: "childSnapshotReference")', function() {
      // uncomment below and update the code to test the property childSnapshotReference
      //var instane = new BigIqDeployConfiguration.PropertiesDeploy();
      //expect(instance).to.be();
    });

    it('should have the property differenceReference (base name: "differenceReference")', function() {
      // uncomment below and update the code to test the property differenceReference
      //var instane = new BigIqDeployConfiguration.PropertiesDeploy();
      //expect(instance).to.be();
    });

    it('should have the property discoveryTaskReferences (base name: "discoveryTaskReferences")', function() {
      // uncomment below and update the code to test the property discoveryTaskReferences
      //var instane = new BigIqDeployConfiguration.PropertiesDeploy();
      //expect(instance).to.be();
    });

    it('should have the property snapshotTaskReference (base name: "snapshotTaskReference")', function() {
      // uncomment below and update the code to test the property snapshotTaskReference
      //var instane = new BigIqDeployConfiguration.PropertiesDeploy();
      //expect(instance).to.be();
    });

    it('should have the property differenceTaskReferences (base name: "differenceTaskReferences")', function() {
      // uncomment below and update the code to test the property differenceTaskReferences
      //var instane = new BigIqDeployConfiguration.PropertiesDeploy();
      //expect(instance).to.be();
    });

    it('should have the property differenceTaskReference (base name: "differenceTaskReference")', function() {
      // uncomment below and update the code to test the property differenceTaskReference
      //var instane = new BigIqDeployConfiguration.PropertiesDeploy();
      //expect(instance).to.be();
    });

    it('should have the property distributeTaskReferences (base name: "distributeTaskReferences")', function() {
      // uncomment below and update the code to test the property distributeTaskReferences
      //var instane = new BigIqDeployConfiguration.PropertiesDeploy();
      //expect(instance).to.be();
    });

    it('should have the property distributeTaskReference (base name: "distributeTaskReference")', function() {
      // uncomment below and update the code to test the property distributeTaskReference
      //var instane = new BigIqDeployConfiguration.PropertiesDeploy();
      //expect(instance).to.be();
    });

    it('should have the property currentStep (base name: "currentStep")', function() {
      // uncomment below and update the code to test the property currentStep
      //var instane = new BigIqDeployConfiguration.PropertiesDeploy();
      //expect(instance).to.be();
    });

    it('should have the property skipVerifyConfig (base name: "skipVerifyConfig")', function() {
      // uncomment below and update the code to test the property skipVerifyConfig
      //var instane = new BigIqDeployConfiguration.PropertiesDeploy();
      //expect(instance).to.be();
    });

    it('should have the property verifyConfigTaskReference (base name: "verifyConfigTaskReference")', function() {
      // uncomment below and update the code to test the property verifyConfigTaskReference
      //var instane = new BigIqDeployConfiguration.PropertiesDeploy();
      //expect(instance).to.be();
    });

    it('should have the property verifyConfigReference (base name: "verifyConfigReference")', function() {
      // uncomment below and update the code to test the property verifyConfigReference
      //var instane = new BigIqDeployConfiguration.PropertiesDeploy();
      //expect(instance).to.be();
    });

    it('should have the property deviceDetails (base name: "deviceDetails")', function() {
      // uncomment below and update the code to test the property deviceDetails
      //var instane = new BigIqDeployConfiguration.PropertiesDeploy();
      //expect(instance).to.be();
    });

    it('should have the property username (base name: "username")', function() {
      // uncomment below and update the code to test the property username
      //var instane = new BigIqDeployConfiguration.PropertiesDeploy();
      //expect(instance).to.be();
    });

    it('should have the property isChildTask (base name: "isChildTask")', function() {
      // uncomment below and update the code to test the property isChildTask
      //var instane = new BigIqDeployConfiguration.PropertiesDeploy();
      //expect(instance).to.be();
    });

    it('should have the property userReference (base name: "userReference")', function() {
      // uncomment below and update the code to test the property userReference
      //var instane = new BigIqDeployConfiguration.PropertiesDeploy();
      //expect(instance).to.be();
    });

    it('should have the property parentTaskReference (base name: "parentTaskReference")', function() {
      // uncomment below and update the code to test the property parentTaskReference
      //var instane = new BigIqDeployConfiguration.PropertiesDeploy();
      //expect(instance).to.be();
    });

    it('should have the property childDeployTasks (base name: "childDeployTasks")', function() {
      // uncomment below and update the code to test the property childDeployTasks
      //var instane = new BigIqDeployConfiguration.PropertiesDeploy();
      //expect(instance).to.be();
    });

    it('should have the property snapshotReference (base name: "snapshotReference")', function() {
      // uncomment below and update the code to test the property snapshotReference
      //var instane = new BigIqDeployConfiguration.PropertiesDeploy();
      //expect(instance).to.be();
    });

    it('should have the property kind (base name: "kind")', function() {
      // uncomment below and update the code to test the property kind
      //var instane = new BigIqDeployConfiguration.PropertiesDeploy();
      //expect(instance).to.be();
    });

    it('should have the property selfLink (base name: "selfLink")', function() {
      // uncomment below and update the code to test the property selfLink
      //var instane = new BigIqDeployConfiguration.PropertiesDeploy();
      //expect(instance).to.be();
    });

    it('should have the property generation (base name: "generation")', function() {
      // uncomment below and update the code to test the property generation
      //var instane = new BigIqDeployConfiguration.PropertiesDeploy();
      //expect(instance).to.be();
    });

    it('should have the property lastUpdateMicros (base name: "lastUpdateMicros")', function() {
      // uncomment below and update the code to test the property lastUpdateMicros
      //var instane = new BigIqDeployConfiguration.PropertiesDeploy();
      //expect(instance).to.be();
    });

    it('should have the property ownerMachineId (base name: "ownerMachineId")', function() {
      // uncomment below and update the code to test the property ownerMachineId
      //var instane = new BigIqDeployConfiguration.PropertiesDeploy();
      //expect(instance).to.be();
    });

  });

}));

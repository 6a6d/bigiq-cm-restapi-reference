/**
 * BIG-IQ Deploy Configuration
 * API used to deploy configuration changes made on BIG-IQ or BIG-IP devices.
 *
 * OpenAPI spec version: 5.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/PropertiesDeployChildDeployTasks', 'model/PropertiesDeployDeviceDetails', 'model/PropertiesDeployDifferenceTaskReference', 'model/PropertiesDeployIdentityReferences', 'model/PropertiesDeploySnapshotReference'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./PropertiesDeployChildDeployTasks'), require('./PropertiesDeployDeviceDetails'), require('./PropertiesDeployDifferenceTaskReference'), require('./PropertiesDeployIdentityReferences'), require('./PropertiesDeploySnapshotReference'));
  } else {
    // Browser globals (root is window)
    if (!root.BigIqDeployConfiguration) {
      root.BigIqDeployConfiguration = {};
    }
    root.BigIqDeployConfiguration.PropertiesDeploy = factory(root.BigIqDeployConfiguration.ApiClient, root.BigIqDeployConfiguration.PropertiesDeployChildDeployTasks, root.BigIqDeployConfiguration.PropertiesDeployDeviceDetails, root.BigIqDeployConfiguration.PropertiesDeployDifferenceTaskReference, root.BigIqDeployConfiguration.PropertiesDeployIdentityReferences, root.BigIqDeployConfiguration.PropertiesDeploySnapshotReference);
  }
}(this, function(ApiClient, PropertiesDeployChildDeployTasks, PropertiesDeployDeviceDetails, PropertiesDeployDifferenceTaskReference, PropertiesDeployIdentityReferences, PropertiesDeploySnapshotReference) {
  'use strict';




  /**
   * The PropertiesDeploy model module.
   * @module model/PropertiesDeploy
   * @version 5.2
   */

  /**
   * Constructs a new <code>PropertiesDeploy</code>.
   * @alias module:model/PropertiesDeploy
   * @class
   */
  var exports = function() {
    var _this = this;


































  };

  /**
   * Constructs a <code>PropertiesDeploy</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/PropertiesDeploy} obj Optional instance to populate.
   * @return {module:model/PropertiesDeploy} The populated <code>PropertiesDeploy</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('status')) {
        obj['status'] = ApiClient.convertToType(data['status'], 'String');
      }
      if (data.hasOwnProperty('startDateTime')) {
        obj['startDateTime'] = ApiClient.convertToType(data['startDateTime'], 'String');
      }
      if (data.hasOwnProperty('endDateTime')) {
        obj['endDateTime'] = ApiClient.convertToType(data['endDateTime'], 'String');
      }
      if (data.hasOwnProperty('partition')) {
        obj['partition'] = ApiClient.convertToType(data['partition'], 'String');
      }
      if (data.hasOwnProperty('firewallType')) {
        obj['firewallType'] = ApiClient.convertToType(data['firewallType'], 'String');
      }
      if (data.hasOwnProperty('firewallIpAddress')) {
        obj['firewallIpAddress'] = ApiClient.convertToType(data['firewallIpAddress'], 'String');
      }
      if (data.hasOwnProperty('identityReferences')) {
        obj['identityReferences'] = ApiClient.convertToType(data['identityReferences'], [PropertiesDeployIdentityReferences]);
      }
      if (data.hasOwnProperty('childSnapshotReference')) {
        obj['childSnapshotReference'] = PropertiesDeployIdentityReferences.constructFromObject(data['childSnapshotReference']);
      }
      if (data.hasOwnProperty('differenceReference')) {
        obj['differenceReference'] = PropertiesDeployIdentityReferences.constructFromObject(data['differenceReference']);
      }
      if (data.hasOwnProperty('discoveryTaskReferences')) {
        obj['discoveryTaskReferences'] = ApiClient.convertToType(data['discoveryTaskReferences'], [PropertiesDeployIdentityReferences]);
      }
      if (data.hasOwnProperty('snapshotTaskReference')) {
        obj['snapshotTaskReference'] = PropertiesDeployIdentityReferences.constructFromObject(data['snapshotTaskReference']);
      }
      if (data.hasOwnProperty('differenceTaskReferences')) {
        obj['differenceTaskReferences'] = PropertiesDeployIdentityReferences.constructFromObject(data['differenceTaskReferences']);
      }
      if (data.hasOwnProperty('differenceTaskReference')) {
        obj['differenceTaskReference'] = PropertiesDeployDifferenceTaskReference.constructFromObject(data['differenceTaskReference']);
      }
      if (data.hasOwnProperty('distributeTaskReferences')) {
        obj['distributeTaskReferences'] = PropertiesDeployIdentityReferences.constructFromObject(data['distributeTaskReferences']);
      }
      if (data.hasOwnProperty('distributeTaskReference')) {
        obj['distributeTaskReference'] = PropertiesDeployDifferenceTaskReference.constructFromObject(data['distributeTaskReference']);
      }
      if (data.hasOwnProperty('currentStep')) {
        obj['currentStep'] = ApiClient.convertToType(data['currentStep'], 'String');
      }
      if (data.hasOwnProperty('skipVerifyConfig')) {
        obj['skipVerifyConfig'] = ApiClient.convertToType(data['skipVerifyConfig'], 'Boolean');
      }
      if (data.hasOwnProperty('verifyConfigTaskReference')) {
        obj['verifyConfigTaskReference'] = PropertiesDeployDifferenceTaskReference.constructFromObject(data['verifyConfigTaskReference']);
      }
      if (data.hasOwnProperty('verifyConfigReference')) {
        obj['verifyConfigReference'] = PropertiesDeployDifferenceTaskReference.constructFromObject(data['verifyConfigReference']);
      }
      if (data.hasOwnProperty('deviceDetails')) {
        obj['deviceDetails'] = ApiClient.convertToType(data['deviceDetails'], [PropertiesDeployDeviceDetails]);
      }
      if (data.hasOwnProperty('username')) {
        obj['username'] = ApiClient.convertToType(data['username'], 'String');
      }
      if (data.hasOwnProperty('isChildTask')) {
        obj['isChildTask'] = ApiClient.convertToType(data['isChildTask'], 'Boolean');
      }
      if (data.hasOwnProperty('userReference')) {
        obj['userReference'] = PropertiesDeployDifferenceTaskReference.constructFromObject(data['userReference']);
      }
      if (data.hasOwnProperty('parentTaskReference')) {
        obj['parentTaskReference'] = PropertiesDeployDifferenceTaskReference.constructFromObject(data['parentTaskReference']);
      }
      if (data.hasOwnProperty('childDeployTasks')) {
        obj['childDeployTasks'] = ApiClient.convertToType(data['childDeployTasks'], [PropertiesDeployChildDeployTasks]);
      }
      if (data.hasOwnProperty('snapshotReference')) {
        obj['snapshotReference'] = PropertiesDeploySnapshotReference.constructFromObject(data['snapshotReference']);
      }
      if (data.hasOwnProperty('kind')) {
        obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
      }
      if (data.hasOwnProperty('selfLink')) {
        obj['selfLink'] = ApiClient.convertToType(data['selfLink'], 'String');
      }
      if (data.hasOwnProperty('generation')) {
        obj['generation'] = ApiClient.convertToType(data['generation'], 'Integer');
      }
      if (data.hasOwnProperty('lastUpdateMicros')) {
        obj['lastUpdateMicros'] = ApiClient.convertToType(data['lastUpdateMicros'], 'Integer');
      }
      if (data.hasOwnProperty('ownerMachineId')) {
        obj['ownerMachineId'] = ApiClient.convertToType(data['ownerMachineId'], 'String');
      }
    }
    return obj;
  }

  /**
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * Name of deployment task
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * Status or actual state of task in state machine.
   * @member {String} status
   */
  exports.prototype['status'] = undefined;
  /**
   * Start time, in date format, the depolyment task began.
   * @member {String} startDateTime
   */
  exports.prototype['startDateTime'] = undefined;
  /**
   * End time, in date format, the deployment task completed.
   * @member {String} endDateTime
   */
  exports.prototype['endDateTime'] = undefined;
  /**
   * BIGIP partition, default Common.
   * @member {String} partition
   */
  exports.prototype['partition'] = undefined;
  /**
   * Firewall Type (VIP, SIP, RD, Mgmt etc..)
   * @member {String} firewallType
   */
  exports.prototype['firewallType'] = undefined;
  /**
   * Firewall IP Address
   * @member {String} firewallIpAddress
   */
  exports.prototype['firewallIpAddress'] = undefined;
  /**
   * @member {Array.<module:model/PropertiesDeployIdentityReferences>} identityReferences
   */
  exports.prototype['identityReferences'] = undefined;
  /**
   * @member {module:model/PropertiesDeployIdentityReferences} childSnapshotReference
   */
  exports.prototype['childSnapshotReference'] = undefined;
  /**
   * @member {module:model/PropertiesDeployIdentityReferences} differenceReference
   */
  exports.prototype['differenceReference'] = undefined;
  /**
   * @member {Array.<module:model/PropertiesDeployIdentityReferences>} discoveryTaskReferences
   */
  exports.prototype['discoveryTaskReferences'] = undefined;
  /**
   * @member {module:model/PropertiesDeployIdentityReferences} snapshotTaskReference
   */
  exports.prototype['snapshotTaskReference'] = undefined;
  /**
   * @member {module:model/PropertiesDeployIdentityReferences} differenceTaskReferences
   */
  exports.prototype['differenceTaskReferences'] = undefined;
  /**
   * @member {module:model/PropertiesDeployDifferenceTaskReference} differenceTaskReference
   */
  exports.prototype['differenceTaskReference'] = undefined;
  /**
   * @member {module:model/PropertiesDeployIdentityReferences} distributeTaskReferences
   */
  exports.prototype['distributeTaskReferences'] = undefined;
  /**
   * @member {module:model/PropertiesDeployDifferenceTaskReference} distributeTaskReference
   */
  exports.prototype['distributeTaskReference'] = undefined;
  /**
   * Step of task during deploy process.
   * @member {String} currentStep
   */
  exports.prototype['currentStep'] = undefined;
  /**
   * Skip verification of configuration for deployment.
   * @member {Boolean} skipVerifyConfig
   */
  exports.prototype['skipVerifyConfig'] = undefined;
  /**
   * @member {module:model/PropertiesDeployDifferenceTaskReference} verifyConfigTaskReference
   */
  exports.prototype['verifyConfigTaskReference'] = undefined;
  /**
   * @member {module:model/PropertiesDeployDifferenceTaskReference} verifyConfigReference
   */
  exports.prototype['verifyConfigReference'] = undefined;
  /**
   * @member {Array.<module:model/PropertiesDeployDeviceDetails>} deviceDetails
   */
  exports.prototype['deviceDetails'] = undefined;
  /**
   * @member {String} username
   */
  exports.prototype['username'] = undefined;
  /**
   * @member {Boolean} isChildTask
   */
  exports.prototype['isChildTask'] = undefined;
  /**
   * @member {module:model/PropertiesDeployDifferenceTaskReference} userReference
   */
  exports.prototype['userReference'] = undefined;
  /**
   * @member {module:model/PropertiesDeployDifferenceTaskReference} parentTaskReference
   */
  exports.prototype['parentTaskReference'] = undefined;
  /**
   * @member {Array.<module:model/PropertiesDeployChildDeployTasks>} childDeployTasks
   */
  exports.prototype['childDeployTasks'] = undefined;
  /**
   * @member {module:model/PropertiesDeploySnapshotReference} snapshotReference
   */
  exports.prototype['snapshotReference'] = undefined;
  /**
   * Identification of resource ex. cm:firewall:tasks:deploy-configuration:deployconfigtaskstate
   * @member {String} kind
   */
  exports.prototype['kind'] = undefined;
  /**
   * URI link used to identify the deploy task object.
   * @member {String} selfLink
   */
  exports.prototype['selfLink'] = undefined;
  /**
   * A unique integer that allows admin track change to deploy object.
   * @member {Integer} generation
   */
  exports.prototype['generation'] = undefined;
  /**
   * Time, in microsec, when deploy task was updated.
   * @member {Integer} lastUpdateMicros
   */
  exports.prototype['lastUpdateMicros'] = undefined;
  /**
   * A unique id generated by software if idenftiy device object using hardware address.
   * @member {String} ownerMachineId
   */
  exports.prototype['ownerMachineId'] = undefined;



  return exports;
}));



/**
 * BIG-IQ Deploy Configuration
 * API used to deploy configuration changes made on BIG-IQ or BIG-IP devices.
 *
 * OpenAPI spec version: 5.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ErrorCollection', 'model/PropertiesDeployCollection', 'model/PropertiesDeploy'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/ErrorCollection'), require('../model/PropertiesDeployCollection'), require('../model/PropertiesDeploy'));
  } else {
    // Browser globals (root is window)
    if (!root.BigIqDeployConfiguration) {
      root.BigIqDeployConfiguration = {};
    }
    root.BigIqDeployConfiguration.DefaultApi = factory(root.BigIqDeployConfiguration.ApiClient, root.BigIqDeployConfiguration.ErrorCollection, root.BigIqDeployConfiguration.PropertiesDeployCollection, root.BigIqDeployConfiguration.PropertiesDeploy);
  }
}(this, function(ApiClient, ErrorCollection, PropertiesDeployCollection, PropertiesDeploy) {
  'use strict';

  /**
   * Default service.
   * @module api/DefaultApi
   * @version 5.2
   */

  /**
   * Constructs a new DefaultApi. 
   * @alias module:api/DefaultApi
   * @class
   * @param {module:ApiClient} apiClient Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the deployConfigurationGet operation.
     * @callback module:api/DefaultApi~deployConfigurationGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PropertiesDeployCollection} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GET all deployment tasks.
     * Returns the collection of firewall namespace specific deployment tasks.
     * @param {module:api/DefaultApi~deployConfigurationGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PropertiesDeployCollection}
     */
    this.deployConfigurationGet = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = PropertiesDeployCollection;

      return this.apiClient.callApi(
        '/deploy-configuration', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deployConfigurationObjectIdGet operation.
     * @callback module:api/DefaultApi~deployConfigurationObjectIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PropertiesDeploy} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Used to get a specific deployment configuration task identified by id.
     * Returns deployment configuration task within the firewall namespace identified by id.
     * @param {String} objectId 
     * @param {module:api/DefaultApi~deployConfigurationObjectIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PropertiesDeploy}
     */
    this.deployConfigurationObjectIdGet = function(objectId, callback) {
      var postBody = null;

      // verify the required parameter 'objectId' is set
      if (objectId == undefined || objectId == null) {
        throw "Missing the required parameter 'objectId' when calling deployConfigurationObjectIdGet";
      }


      var pathParams = {
        'objectId': objectId
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = PropertiesDeploy;

      return this.apiClient.callApi(
        '/deploy-configuration/{objectId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deployConfigurationObjectIdPost operation.
     * @callback module:api/DefaultApi~deployConfigurationObjectIdPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PropertiesDeploy} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * POST deployment task policy for firewall namespace.
     * Will POST a new deployment task within the firewall namespace.
     * @param {String} objectId 
     * @param {module:api/DefaultApi~deployConfigurationObjectIdPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PropertiesDeploy}
     */
    this.deployConfigurationObjectIdPost = function(objectId, callback) {
      var postBody = null;

      // verify the required parameter 'objectId' is set
      if (objectId == undefined || objectId == null) {
        throw "Missing the required parameter 'objectId' when calling deployConfigurationObjectIdPost";
      }


      var pathParams = {
        'objectId': objectId
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = PropertiesDeploy;

      return this.apiClient.callApi(
        '/deploy-configuration/{objectId}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));

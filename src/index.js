/**
 * BIG-IQ Deploy Configuration
 * API used to deploy configuration changes made on BIG-IQ or BIG-IP devices.
 *
 * OpenAPI spec version: 5.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ErrorCollection', 'model/PropertiesDeploy', 'model/PropertiesDeployChildDeployTasks', 'model/PropertiesDeployCollection', 'model/PropertiesDeployDeviceDetails', 'model/PropertiesDeployDeviceReference', 'model/PropertiesDeployDifferenceTaskReference', 'model/PropertiesDeployIdentityReferences', 'model/PropertiesDeploySnapshotReference', 'api/DefaultApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/ErrorCollection'), require('./model/PropertiesDeploy'), require('./model/PropertiesDeployChildDeployTasks'), require('./model/PropertiesDeployCollection'), require('./model/PropertiesDeployDeviceDetails'), require('./model/PropertiesDeployDeviceReference'), require('./model/PropertiesDeployDifferenceTaskReference'), require('./model/PropertiesDeployIdentityReferences'), require('./model/PropertiesDeploySnapshotReference'), require('./api/DefaultApi'));
  }
}(function(ApiClient, ErrorCollection, PropertiesDeploy, PropertiesDeployChildDeployTasks, PropertiesDeployCollection, PropertiesDeployDeviceDetails, PropertiesDeployDeviceReference, PropertiesDeployDifferenceTaskReference, PropertiesDeployIdentityReferences, PropertiesDeploySnapshotReference, DefaultApi) {
  'use strict';

  /**
   * API_used_to_deploy_configuration_changes_made_on_BIG_IQ_or_BIG_IP_devices_.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var BigIqDeployConfiguration = require('index'); // See note below*.
   * var xxxSvc = new BigIqDeployConfiguration.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new BigIqDeployConfiguration.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new BigIqDeployConfiguration.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new BigIqDeployConfiguration.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 5.2
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The ErrorCollection model constructor.
     * @property {module:model/ErrorCollection}
     */
    ErrorCollection: ErrorCollection,
    /**
     * The PropertiesDeploy model constructor.
     * @property {module:model/PropertiesDeploy}
     */
    PropertiesDeploy: PropertiesDeploy,
    /**
     * The PropertiesDeployChildDeployTasks model constructor.
     * @property {module:model/PropertiesDeployChildDeployTasks}
     */
    PropertiesDeployChildDeployTasks: PropertiesDeployChildDeployTasks,
    /**
     * The PropertiesDeployCollection model constructor.
     * @property {module:model/PropertiesDeployCollection}
     */
    PropertiesDeployCollection: PropertiesDeployCollection,
    /**
     * The PropertiesDeployDeviceDetails model constructor.
     * @property {module:model/PropertiesDeployDeviceDetails}
     */
    PropertiesDeployDeviceDetails: PropertiesDeployDeviceDetails,
    /**
     * The PropertiesDeployDeviceReference model constructor.
     * @property {module:model/PropertiesDeployDeviceReference}
     */
    PropertiesDeployDeviceReference: PropertiesDeployDeviceReference,
    /**
     * The PropertiesDeployDifferenceTaskReference model constructor.
     * @property {module:model/PropertiesDeployDifferenceTaskReference}
     */
    PropertiesDeployDifferenceTaskReference: PropertiesDeployDifferenceTaskReference,
    /**
     * The PropertiesDeployIdentityReferences model constructor.
     * @property {module:model/PropertiesDeployIdentityReferences}
     */
    PropertiesDeployIdentityReferences: PropertiesDeployIdentityReferences,
    /**
     * The PropertiesDeploySnapshotReference model constructor.
     * @property {module:model/PropertiesDeploySnapshotReference}
     */
    PropertiesDeploySnapshotReference: PropertiesDeploySnapshotReference,
    /**
     * The DefaultApi service constructor.
     * @property {module:api/DefaultApi}
     */
    DefaultApi: DefaultApi
  };

  return exports;
}));
